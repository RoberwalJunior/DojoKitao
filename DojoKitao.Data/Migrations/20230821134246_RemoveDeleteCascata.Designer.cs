// <auto-generated />
using System;
using DojoKitao.Data.Dados.Daos.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DojoKitao.Data.Migrations
{
    [DbContext(typeof(DojoKitaoContext))]
    [Migration("20230821134246_RemoveDeleteCascata")]
    partial class RemoveDeleteCascata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DojoKitao.Data.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaId")
                        .IsUnique();

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("DojoKitao.Data.Models.Aula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Aulas");
                });

            modelBuilder.Entity("DojoKitao.Data.Models.Matricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataIncricao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("DojoKitao.Data.Models.Treino", b =>
                {
                    b.Property<int?>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int?>("AulaId")
                        .HasColumnType("int");

                    b.HasKey("AlunoId", "AulaId");

                    b.HasIndex("AulaId");

                    b.ToTable("Treinos");
                });

            modelBuilder.Entity("DojoKitao.Data.Models.Aluno", b =>
                {
                    b.HasOne("DojoKitao.Data.Models.Matricula", "Matricula")
                        .WithOne("Aluno")
                        .HasForeignKey("DojoKitao.Data.Models.Aluno", "MatriculaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("DojoKitao.Data.Models.Treino", b =>
                {
                    b.HasOne("DojoKitao.Data.Models.Aluno", "Aluno")
                        .WithMany("Treinos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DojoKitao.Data.Models.Aula", "Aula")
                        .WithMany("Treinos")
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Aula");
                });

            modelBuilder.Entity("DojoKitao.Data.Models.Aluno", b =>
                {
                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("DojoKitao.Data.Models.Aula", b =>
                {
                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("DojoKitao.Data.Models.Matricula", b =>
                {
                    b.Navigation("Aluno")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
